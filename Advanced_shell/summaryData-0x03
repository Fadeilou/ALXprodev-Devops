#!/bin/bash
# This script generates a CSV report from PokÃ©mon data files
# and calculates the average height and weight.

DATA_DIR="pokemon_data"
REPORT_FILE="pokemon_report.csv"

# Check if the data directory exists.
if [ ! -d "$DATA_DIR" ]; then
    echo "Error: Directory '$DATA_DIR' not found." >&2
    echo "Please run the batch processing script first." >&2
    exit 1
fi

# Write the header row for the CSV file.
echo "Name,Height (m),Weight (kg)" > "$REPORT_FILE"

# Find all JSON files in the data directory and process them.
for file in "$DATA_DIR"/*.json; do
  # Ensure we are only processing files.
  if [ -f "$file" ]; then
    # Use jq to extract name, height, and weight.
    # -r outputs raw strings.
    # We capitalize the first letter of the name.
    # Height and weight are converted from API units to m and kg.
    # The result is formatted as a CSV row and appended to the report file.
    jq -r '[.name | sub("^[a-z]"; .[0:1] | ascii_upcase), .height/10, .weight/10] | @csv' "$file" >> "$REPORT_FILE"
  fi
done

echo "CSV Report generated at: $REPORT_FILE"
echo # Blank line for spacing

# Display the generated CSV report.
cat "$REPORT_FILE"
echo # Blank line for spacing

# Use awk to parse the CSV and calculate averages.
# -F, sets the delimiter to a comma.
# NR>1 tells awk to skip the first record (the header row).
awk -F, '
NR > 1 {
    height_sum += $2;
    weight_sum += $3;
    count++;
}
END {
    if (count > 0) {
        printf "Average Height: %.2f m\n", height_sum / count;
        printf "Average Weight: %.2f kg\n", weight_sum / count;
    }
}' "$REPORT_FILE" 